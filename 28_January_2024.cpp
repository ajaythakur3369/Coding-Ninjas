/******************************************************************************
1. What is the output of the following code?
*******************************************************************************/

#include <iostream>
using namespace std;

int main() {
    char * a = "Hello\0World";
    cout << strlen(a) << endl;
    return 0;
}

/******************************************************************************
Output:- 5
*******************************************************************************/

/******************************************************************************
2. Which method is correct to concatenate a character at the end of a string object?
*******************************************************************************/

/******************************************************************************
Method 1:
*******************************************************************************/

string s;
s = s + 'a';

/******************************************************************************
Method 2:
*******************************************************************************/

string s;
s.push_back('a');

/******************************************************************************
Answer:- Both Method 1 & 2
*******************************************************************************/

/******************************************************************************
3. What is the output of the following code?
*******************************************************************************/

#include <iostream>
using namespace std;

int main() {
    int a = 10, b = 20, c = 100;
    if (a <= b || c <= b) {
        cout << "hello" << endl;
    } else if (a <= b || a <= c) {
        cout << "hi" << endl;
    } else {
        cout << "hey" << endl;
    }
}

/******************************************************************************
Output:- hello
*******************************************************************************/

/******************************************************************************
4. How many operand unary operators take?
Answer:- 1
*******************************************************************************/













